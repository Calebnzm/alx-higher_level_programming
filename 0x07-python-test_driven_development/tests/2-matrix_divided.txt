'''
Test cases for matrix_divided function
'''

from 2-matrix_divided import matrix_divided  # Replace 'my_module' with the actual module name

# Test case 1: Dividing a matrix by an integer
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Dividing a matrix by a float
>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> div = 0.5
>>> matrix_divided(matrix, div)
[[3.0, 5.0, 7.0], [9.0, 11.0, 13.0]]

# Test case 3: Dividing a matrix by 0 (should raise ZeroDivisionError)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 4: Matrix with rows of different sizes (should raise TypeError)
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 5: Matrix with non-integer and non-float elements (should raise TypeError)
>>> matrix = [['a', 'b'], ['c', 'd']]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
