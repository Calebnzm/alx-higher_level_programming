# Test cases for matrix_mul function

from 100-matrix_mul import matrix_mul
# Test case 1: Multiply two 2x2 matrices
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

# Test case 2: Multiply a 1x2 matrix by a 2x2 matrix
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Test case 3: Multiply two 3x3 matrices
>>> matrix_mul([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[9, 8, 7], [6, 5, 4], [3, 2, 1]])
[[30, 24, 18], [84, 69, 54], [138, 114, 90]]

# Test case 4: Multiply a 2x2 matrix by a 2x3 matrix (incompatible dimensions)
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

# Test case 5: Multiply an empty matrix by a non-empty matrix (m_a is empty)
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

# Test case 6: Multiply two matrices with non-integer/float elements
>>> matrix_mul([['a', 'b'], ['c', 'd']], [['e', 'f'], ['g', 'h']])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

# Test case 7: Multiply a non-list by a matrix (m_a is not a list)
>>> matrix_mul(42, [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list or m_b must be a list

# Test case 8: Multiply a matrix by an empty matrix (m_b is empty)
>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

# Test case 9: Multiply a matrix by a non-list (m_b is not a list)
>>> matrix_mul([[1, 2], [3, 4]], 42)
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists

# Test case 10: Multiply two matrices with incompatible dimensions
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: each row of m_a must be of the same size or each row of m_b must be of the same size
